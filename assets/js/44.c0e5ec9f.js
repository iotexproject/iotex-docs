(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{629:function(e,a,t){"use strict";t.r(a);var s=t(38),n=Object(s.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"deploy-your-own-backend-service"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#deploy-your-own-backend-service"}},[e._v("#")]),e._v(" Deploy your own backend service")]),e._v(" "),t("p",[e._v("You can configure your own backend service to receive the data from your Pebbles. The backend service will allow you to archive, visualize, and even send the data to a IoTeX Blockchain Smart Contract.")]),e._v(" "),t("h2",{attrs:{id:"hardware-requirements"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hardware-requirements"}},[e._v("#")]),e._v(" Hardware Requirements")]),e._v(" "),t("p",[e._v("To run the backend services, you will need a machine with least 2CPU and 4GB memory with Debian or Ubuntu Linux. You can use an AWS or GCP virtual server, or if you want to use your local PC/laptop, make sure it has a public IP (e.g., using ngrok), where pebble can send data to.")]),e._v(" "),t("h2",{attrs:{id:"install-docker-ce"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#install-docker-ce"}},[e._v("#")]),e._v(" Install Docker CE")]),e._v(" "),t("p",[e._v("You can install Docker CE by following the official documentation at "),t("a",{attrs:{href:"https://docs.docker.com/engine/installation/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://docs.docker.com/engine/installation/"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("Optionally, you can your Linux user to the "),t("code",[e._v("Docker")]),e._v(" Group: that will allow you to use the "),t("code",[e._v("docker")]),e._v(" command without "),t("code",[e._v("sudo")]),e._v(":")]),e._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("groupadd")]),e._v(" docker"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("usermod")]),e._v(" -aG docker "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$USER")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("To make sure it has been applied you need to log out and login again then type:")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("cat /etc/group | grep docker\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("should return something like "),t("code",[e._v("docker:x:999:ubuntu")]),e._v(".")]),e._v(" "),t("h2",{attrs:{id:"install-docker-compose"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#install-docker-compose"}},[e._v("#")]),e._v(" Install Docker Compose")]),e._v(" "),t("p",[e._v("You can install Docker Compose by following the official documentation at "),t("a",{attrs:{href:"https://docs.docker.com/compose/install/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://docs.docker.com/compose/install/"),t("OutboundLink")],1)]),e._v(" "),t("h2",{attrs:{id:"install-the-sdk-for-mqtt"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#install-the-sdk-for-mqtt"}},[e._v("#")]),e._v(" Install the SDK for MQTT")]),e._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("apt-get")]),e._v(" update\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("apt")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" python3-pip\npip3 "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" AWSIoTPythonSDK\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br")])]),t("h2",{attrs:{id:"configure-git"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#configure-git"}},[e._v("#")]),e._v(" Configure git")]),e._v(" "),t("p",[e._v("Make sure your "),t("code",[e._v("git")]),e._v(", installation is correctly configured (e.g., with the correct SSH key if required), so that the "),t("code",[e._v("git clone")]),e._v(" command will work properly.")]),e._v(" "),t("h2",{attrs:{id:"run-pebble-backend-configuration"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#run-pebble-backend-configuration"}},[e._v("#")]),e._v(" Run Pebble Backend Configuration")]),e._v(" "),t("p",[e._v("To start the backend configuration run:")]),e._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" ~/pebble-backend-master\n./setup-dev.sh\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("p",[e._v("this will download all docker images and code repos first, and may take a while before completion.")]),e._v(" "),t("h2",{attrs:{id:"start-the-backend-service"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#start-the-backend-service"}},[e._v("#")]),e._v(" Start the backend service")]),e._v(" "),t("p",[e._v("To start the backend service run:")]),e._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[e._v("./start-dev.sh\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("Make sure all the docker images are up and running by running")]),e._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[e._v("docker "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("ps")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("and you should see something like below:")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('CONTAINER ID        IMAGE                            COMMAND                  CREATED             STATUS              PORTS\n                                  NAMES\n116b6aa864c8        minio/minio:latest               "/usr/bin/docker-ent…"   14 minutes ago      Up 14 minutes       0.0.0.0:9000->9000/tcp\n                                  docker-compose_minio_1\na651095d850d        iotex-hmq:local                  "/hmq -c /config/con…"   14 minutes ago      Up 14 minutes       0.0.0.0:1884->1883/tcp\n                                  docker-compose_hmq_1\na67d65f71c76        thingsboard/tb-gateway:latest    "/bin/sh ./start-gat…"   14 minutes ago      Up 14 minutes\n                                  docker-compose_thingsboard-gateway_1\n9ce61f993ca5        iotex-blockchain-data:local      "pebble-data-contain…"   14 minutes ago      Up 14 minutes\n                                  docker-compose_api-server_1\ncbb292f45664        thingsboard/tb-postgres:latest   "start-tb.sh"            14 minutes ago      Up 14 minutes       0.0.0.0:1883->1883/tcp, 0.0.0.0:5683->5\n683/udp, 0.0.0.0:8080->9090/tcp   docker-compose_thingsboard_1\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br")])]),t("p",[e._v("Make sure port "),t("code",[e._v("1884")]),e._v(" is exposed for MQTT and port "),t("code",[e._v("8080")]),e._v(" is exposed for Thingsboard, from any other machine type (replace "),t("code",[e._v("1.2.3.4")]),e._v("with the actual IP address of your backend server):")]),e._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[e._v("telnet "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1.2")]),e._v(".3.4 "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1884")]),e._v("\ntelnet "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1.2")]),e._v(".3.4 "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("8080")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("h2",{attrs:{id:"configure-thingsboard"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#configure-thingsboard"}},[e._v("#")]),e._v(" Configure thingsboard")]),e._v(" "),t("p",[e._v("Login in Thingsboard via "),t("a",{attrs:{href:""}},[e._v("http://1.2.3.4:8080/")]),e._v(" with the default username: "),t("code",[e._v("tenant@thingsboard.org")]),e._v(" and password "),t("code",[e._v("tenant")]),e._v(" (feel free to change your password after login).")]),e._v(" "),t("p",[e._v("In Thingsboard, create a Gateway device:\n"),t("img",{attrs:{src:"/img/developer/pebble-backend/create-gateway-1.jpg",alt:""}})]),e._v(" "),t("p",[t("img",{attrs:{src:"/img/developer/pebble-backend/create-gateway-2.jpg",alt:""}})]),e._v(" "),t("p",[t("img",{attrs:{src:"/img/developer/pebble-backend/create-gateway-3.jpg",alt:""}})]),e._v(" "),t("p",[e._v("Copy the "),t("code",[e._v("Access Token")]),e._v(" of the gateway device and paste it in the configuration file of the gateway:")]),e._v(" "),t("p",[t("img",{attrs:{src:"/img/developer/pebble-backend/create-gateway-4.jpg",alt:""}})]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("sudo nano ~/pebble-var/conf/tb-gateway/conf/tb_gateway.yaml\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("Replace "),t("code",[e._v("xxxxxxxxxxxxx")]),e._v(" with the newly copied token")]),e._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("thingsboard")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("host")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" thingsboard\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("port")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1883")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("security")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("accessToken")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" xxxxxxxxxxxxx\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("storage")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" memory\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("read_records_count")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("100")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("max_records_count")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("100000")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("connectors")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" MQTT Broker Connector\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" mqtt\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("configuration")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" mqtt.json\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br")])]),t("ol",{attrs:{start:"6"}},[t("li",[e._v("Restart the gateway service with:")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("docker restart docker-compose_thingsboard-gateway_1\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("ol",{attrs:{start:"7"}},[t("li",[e._v("Congrats! You just setup the pebble backend, which is ready to receive data from Pebbles!")])]),e._v(" "),t("h2",{attrs:{id:"visualize-the-data-on-thingsboard"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#visualize-the-data-on-thingsboard"}},[e._v("#")]),e._v(" Visualize the Data on Thingsboard")]),e._v(" "),t("h3",{attrs:{id:"receive-pebble-mqtt-data"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#receive-pebble-mqtt-data"}},[e._v("#")]),e._v(" Receive Pebble MQTT data")]),e._v(" "),t("p",[e._v("To visualize data from your Pebble, you need to change the Pebble firmware configuration to have it send messages to your backend service public endpoint instead of the default endpoint "),t("code",[e._v("trypebble.io:8080")]),e._v(", to do so you must change the "),t("code",[e._v("Asset Tracker > IoTeX Hosted MQTT broker hostname")]),e._v(" firmware setting accordingly: see the "),t("a",{attrs:{href:"http://localhost:8080/developer/hardware/pebble-firmware-configure",target:"_blank",rel:"noopener noreferrer"}},[e._v('"Configure the Firmware"'),t("OutboundLink")],1),e._v(" doc to learn ho to configure the Pebble firmware.")]),e._v(" "),t("h3",{attrs:{id:"inject-mock-data"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#inject-mock-data"}},[e._v("#")]),e._v(" Inject Mock Data")]),e._v(" "),t("p",[e._v("Alternatively, if you want to visualize some data when you do not have a Pebble device available, you can use the "),t("code",[e._v("mock")]),e._v(" tool to generate and send some test data compliant with the Pebble data specs.\nRun the following on the Pebble Backend server:")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("cd pebble-backend-master/scripts\n./mock-dev.sh\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("p",[e._v("This script continously produce data points according to pebble data specification, and inject it into the local "),t("code",[e._v("1884")]),e._v(" port. If you run into an issue, e.g., not see data flow in, you can run directly "),t("code",[e._v("python3 ./run-dev.py -e localhost -p 1884 -id device/pebble-1/data -pf ../data/sample.txt")]),e._v(" to debug.")]),e._v(" "),t("h3",{attrs:{id:"visualize-the-data"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#visualize-the-data"}},[e._v("#")]),e._v(" Visualize the data")]),e._v(" "),t("p",[e._v("Import the predefined dashboard:")]),e._v(" "),t("p",[t("img",{attrs:{src:"/img/developer/pebble-backend/import-dashboard-1.jpg",alt:""}})]),e._v(" "),t("p",[e._v("drop example/dashboard/pebble_1.json to the box")]),e._v(" "),t("p",[t("img",{attrs:{src:"/img/developer/pebble-backend/import-dashboard-2.jpg",alt:""}})]),e._v(" "),t("p",[t("img",{attrs:{src:"/img/developer/pebble-backend/import-dashboard-3.jpg",alt:""}})]),e._v(" "),t("p",[e._v("Click the Modify Icon at the bottom right of the screen:")]),e._v(" "),t("p",[t("img",{attrs:{src:"/img/developer/pebble-backend/import-dashboard-4.jpg",alt:""}})]),e._v(" "),t("p",[e._v("Select the device "),t("code",[e._v("pebble-1")]),e._v("from the dropdown:")]),e._v(" "),t("p",[t("img",{attrs:{src:"/img/developer/pebble-backend/import-dashboard-5.jpg",alt:""}})])])}),[],!1,null,null,null);a.default=n.exports}}]);